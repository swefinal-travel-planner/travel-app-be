definitions:
  entity.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      updatedAt:
        type: string
    type: object
  httpcommon.Error:
    properties:
      code:
        type: string
      field:
        type: string
      message:
        type: string
    type: object
  httpcommon.HttpResponse-any:
    properties:
      data: {}
      errors:
        items:
          $ref: '#/definitions/httpcommon.Error'
        type: array
      success:
        type: boolean
    type: object
  httpcommon.HttpResponse-entity_User:
    properties:
      data:
        $ref: '#/definitions/entity.User'
      errors:
        items:
          $ref: '#/definitions/httpcommon.Error'
        type: array
      success:
        type: boolean
    type: object
  model.LoginRequest:
    properties:
      email:
        maxLength: 255
        minLength: 10
        type: string
      password:
        maxLength: 255
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  model.RefreshTokenRequest:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  model.RegisterRequest:
    properties:
      email:
        maxLength: 255
        minLength: 10
        type: string
      name:
        maxLength: 255
        minLength: 5
        type: string
      password:
        maxLength: 255
        minLength: 8
        type: string
      phoneNumber:
        maxLength: 255
        minLength: 10
        type: string
    required:
    - email
    - name
    - password
    - phoneNumber
    type: object
  model.SendOTPRequest:
    properties:
      email:
        maxLength: 255
        minLength: 10
        type: string
    required:
    - email
    type: object
  model.SetPasswordRequest:
    properties:
      email:
        maxLength: 255
        minLength: 10
        type: string
      otp:
        maxLength: 6
        minLength: 6
        type: string
      password:
        maxLength: 255
        minLength: 8
        type: string
    required:
    - email
    - otp
    - password
    type: object
  model.VerifyOTPRequest:
    properties:
      email:
        maxLength: 255
        minLength: 10
        type: string
      otp:
        maxLength: 6
        minLength: 6
        type: string
    required:
    - email
    - otp
    type: object
info:
  contact: {}
paths:
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Set a new password after OTP verification
      parameters:
      - description: Set Password payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.SetPasswordRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Set Password
      tags:
      - Auths
  /auth/forgot-password/otp:
    post:
      consumes:
      - application/json
      description: Send OTP to user email
      parameters:
      - description: Send OTP payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.SendOTPRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Send OTP to Mail
      tags:
      - Auths
  /auth/forgot-password/verify-otp:
    post:
      consumes:
      - application/json
      description: Verify OTP with email and otp
      parameters:
      - description: Verify OTP payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.VerifyOTPRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Verify OTP
      tags:
      - Auths
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login to account
      parameters:
      - description: Auth payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-entity_User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Login
      tags:
      - Auths
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh token
      parameters:
      - description: Auth payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-entity_User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Refresh
      tags:
      - Auths
  /auth/register:
    post:
      consumes:
      - application/json
      description: User register
      parameters:
      - description: Auth payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      - description: 'Authorization: Bearer'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Register user
      tags:
      - User
swagger: "2.0"
